name: 🚀 Deploy FastAPI Backend with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    environment: production

    steps:
      - name: 🧹 Cleanup all __pycache__ folders before checkout
        run: |
          sudo find /home/Tabchny/actions-runner/_work/Petly_App -name '__pycache__' -type d -exec sudo rm -rf {} + || true
          sudo find /home/Tabchny/actions-runner/_work/Petly_App -name '*.pyc' -exec sudo rm -f {} + || true

      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Check BACK_ENV secret availability
        run: |
          if [ -z "${{ secrets.BACK_ENV }}" ]; then
            echo "❌ ERROR: BACK_ENV secret is not set in GitHub repository settings!"
            echo "Please add BACK_ENV secret in repository Settings > Secrets and variables > Actions"
            exit 1
          else
            echo "✅ BACK_ENV secret is available"
          fi

      - name: 📄 Create .env file
        run: |
          cd back-project
          echo "🔧 Creating .env file from BACK_ENV secret..."
          echo "${{ secrets.BACK_ENV }}" > .env
          
          echo "📝 Checking .env file was created:"
          if [ -f .env ]; then
            echo "✅ .env file exists"
            echo "📏 File size: $(wc -c < .env) bytes"
            echo "📄 .env file contents (masked):"
            sed 's/=.*/=***MASKED***/' .env
          else
            echo "❌ ERROR: .env file was not created!"
            exit 1
          fi

      - name: 🐳 Stop existing containers
        run: |
          cd back-project
          echo "🛑 Stopping existing containers..."
          sudo docker compose down --remove-orphans || true
          sudo docker system prune -f || true

      - name: 🧹 Fix permissions after stopping containers
        run: |
          sudo chown -R $USER:$USER /home/Tabchny/actions-runner/_work/Petly_App

      - name: 🔨 Build and start containers
        run: |
          cd back-project
          echo "🏗️ Building and starting containers..."
          sudo docker compose up -d --build --force-recreate
          
          echo "⏳ Waiting for containers to start..."
          sleep 10

      - name: 🔍 Verify deployment
        run: |
          cd back-project
          echo "🐳 Running containers:"
          sudo docker compose ps
          
          echo "📊 Container health status:"
          sudo docker compose top
          
          echo "📝 Backend logs (last 20 lines):"
          sudo docker compose logs --tail=20 backend
          
          echo "🌐 Testing backend health:"
          curl -f http://localhost:8000/docs || echo "⚠️ Backend health check failed"

      - name: 🚨 Show errors if deployment failed
        if: failure()
        run: |
          cd back-project
          echo "💥 Deployment failed! Showing debug information..."
          echo "📝 All container logs:"
          sudo docker compose logs
          
          echo "🐳 Container status:"
          sudo docker compose ps -a
          
          echo "💾 Docker system info:"
          sudo docker system df
