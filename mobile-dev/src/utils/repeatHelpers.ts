import * as Notifications from 'expo-notifications';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { ActivityRecordCreate, ActivityRecord } from '../types';

const DEV_MODE_STORAGE_KEY = 'repeat_test_mode';

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–∞—Ç –¥–ª—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
 */
export function getRepeatDates(baseDate: Date, repeat: 'daily' | 'weekly' | 'monthly'): Date[] {
  const countMap = { daily: 7, weekly: 4, monthly: 3 };
  const count = countMap[repeat];
  const result: Date[] = [];

  for (let i = 1; i <= count; i++) {
    const date = new Date(baseDate);
    if (repeat === 'daily') {
      date.setDate(date.getDate() + i);
    } else if (repeat === 'weekly') {
      date.setDate(date.getDate() + i * 7);
    } else if (repeat === 'monthly') {
      date.setMonth(date.getMonth() + i);
    }
    result.push(date);
  }

  return result;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å –Ω–æ–≤–æ–π –¥–∞—Ç–æ–π
 */
export function createRepeatActivity(
  baseActivity: ActivityRecordCreate,
  newDate: Date
): ActivityRecordCreate {
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∫–∞–∫ –ª–æ–∫–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
  const formatLocalDateTime = (date: Date): string => {
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const day = String(date.getDate()).padStart(2, '0');
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');
    const seconds = String(date.getSeconds()).padStart(2, '0');
    return `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`;
  };

  const newDateTimeString = formatLocalDateTime(newDate);

  return {
    ...baseActivity,
    date: newDateTimeString,
    time: newDateTimeString,
    // –£–±–∏—Ä–∞–µ–º repeat –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π - –æ–Ω–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –µ—â–µ –±–æ–ª—å—à–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
    repeat: undefined,
  };
}

// –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
let DEVELOPMENT_MODE = __DEV__;
const TEST_REMINDER_MINUTES = 2; // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
export async function setDevelopmentMode(enabled: boolean): Promise<void> {
  DEVELOPMENT_MODE = enabled;
  try {
    await AsyncStorage.setItem(DEV_MODE_STORAGE_KEY, enabled.toString());
    console.log(`üîß Development mode for notifications: ${enabled ? 'enabled' : 'disabled'} (saved to storage)`);
  } catch (error) {
    console.error('Failed to save development mode to storage:', error);
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 */
export function getDevelopmentMode(): boolean {
  return DEVELOPMENT_MODE;
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
 */
export async function loadDevelopmentMode(): Promise<boolean> {
  try {
    const stored = await AsyncStorage.getItem(DEV_MODE_STORAGE_KEY);
    if (stored !== null) {
      const enabled = stored === 'true';
      DEVELOPMENT_MODE = enabled;
      console.log(`üîß Loaded development mode from storage: ${enabled}`);
      return enabled;
    }
  } catch (error) {
    console.error('Failed to load development mode from storage:', error);
  }
  
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º __DEV__
  DEVELOPMENT_MODE = __DEV__;
  return __DEV__;
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏
 */
export function getExtensionReminderDays(repeat: 'daily' | 'weekly' | 'monthly'): number {
  switch (repeat) {
    case 'daily':
      return 7;
    case 'weekly':
      return 28; // 4 –Ω–µ–¥–µ–ª–∏
    case 'monthly':
      return 90; // 3 –º–µ—Å—è—Ü–∞
    default:
      return 7;
  }
}

/**
 * –ü–ª–∞–Ω–∏—Ä—É–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
 */
export async function scheduleExtensionReminder(
  activity: ActivityRecord,
  repeat: 'daily' | 'weekly' | 'monthly'
): Promise<string | null> {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    const currentDevMode = getDevelopmentMode();
    console.log(`üîß Current development mode: ${currentDevMode}`);
    console.log(`üîß __DEV__: ${__DEV__}`);
    console.log(`üîß DEVELOPMENT_MODE variable: ${DEVELOPMENT_MODE}`);
    
    // –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    const reminderDate = new Date();
    
    if (currentDevMode && __DEV__) {
      // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω—É—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      reminderDate.setMinutes(reminderDate.getMinutes() + TEST_REMINDER_MINUTES);
      console.log(`üîß Development mode: scheduling reminder in ${TEST_REMINDER_MINUTES} minutes`);
    } else {
      // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –¥–Ω–∏
      const reminderDays = getExtensionReminderDays(repeat);
      reminderDate.setDate(reminderDate.getDate() + reminderDays);
      reminderDate.setHours(10, 0, 0, 0); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ 10:00 —É—Ç—Ä–∞
      console.log(`üìÖ Production mode: scheduling reminder in ${reminderDays} days`);
    }
    
    console.log(`üìÖ Scheduling extension reminder for activity ${activity.id}:`);
    console.log(`  - Current time: ${new Date().toLocaleString()}`);
    console.log(`  - Reminder date: ${reminderDate.toLocaleString()}`);
    console.log(`  - Mode: ${(currentDevMode && __DEV__) ? 'Development' : 'Production'}`);
    console.log(`  - Time difference: ${(reminderDate.getTime() - new Date().getTime()) / 1000 / 60} minutes`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –≤ –±—É–¥—É—â–µ–º
    if (reminderDate <= new Date()) {
      console.warn('‚ö†Ô∏è Reminder date is in the past, skipping');
      return null;
    }

    const notificationId = await Notifications.scheduleNotificationAsync({
      content: {
        title: '‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å',
        body: `–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ "${activity.title}" –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –¥–Ω–∏?`,
        sound: 'default',
        data: {
          type: 'repeat-extension',
          activityId: activity.id,
          originalRepeat: repeat,
          petId: activity.pet_id,
          category: activity.category,
        },
      },
      trigger: {
        type: Notifications.SchedulableTriggerInputTypes.DATE,
        date: reminderDate,
      },
    });

    console.log(`‚úÖ Extension reminder scheduled: ${notificationId}`);
    console.log(`   Will fire on: ${reminderDate.toLocaleString()}`);
    return notificationId;
  } catch (error) {
    console.error('‚ùå Failed to schedule extension reminder:', error);
    return null;
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
 */
export function createRepeatTitle(baseTitle: string, index: number, repeat: string): string {
  // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
  return baseTitle;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
 */
export function shouldCreateRepeats(repeat: string | undefined | null): boolean {
  return repeat !== undefined && repeat !== null && repeat !== 'none';
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export function getRepeatDescription(repeat: 'daily' | 'weekly' | 'monthly'): string {
  switch (repeat) {
    case 'daily':
      return '–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π (—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è)';
    case 'weekly':
      return '–∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –≤ —Ç–µ—á–µ–Ω–∏–µ 4 –Ω–µ–¥–µ–ª—å (—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –Ω–µ–¥–µ–ª–∏)';
    case 'monthly':
      return '–∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–µ—Å—è—Ü–µ–≤ (—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞)';
    default:
      return '';
  }
} 